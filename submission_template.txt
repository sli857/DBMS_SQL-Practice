<?xml version="1.0"?>
<pset>

    <!--
        CS 564, SPRING 2024
        HOMEWORK 1 SUBMISSION TEMPLATE

        Please copy and paste your SQL queries into the appropriate spots below. 

        When submitting SQL queries, please do not include the initial 
        %sql or %%sql IPython commands. Just include the SQL code.

        DO NOT DELETE THE <![CDATA[ ... ]]> LINES IN EACH <answer> TAG!
        Doing so will break the autograder. To avoid accidentally breaking
        something, please leave all existing comments in this template
        intact in your submission.
    -->

    <student>
        <name>
            <!-- Insert your full name on the line below. -->
            David Li
        </name>
        <studentid>
            <!-- Insert your student ID number below. -->
            908 313 4198
        </studentid>
    </student>


    <!-- BEGIN PROBLEM 1 -->
    <answer number="1a">
        <!-- Paste your solution to problem 1, part (a) below this line. --><![CDATA[

SELECT A.i,A.j, (A.val + B.val) AS val FROM A, B WHERE A.i = B.i AND A.j = B.j;

        ]]><!-- End problem 1, part (a). -->
    </answer>
    <answer number="1b">
        <!-- Paste your solution to problem 1, part (b) below this line. --><![CDATA[

SELECT sum(A.val * B.val) AS DotProduct 
FROM A, B 
WHERE A.i = B.i 
AND A.j = 1 
AND B.j = 2;

        ]]><!-- End problem 1, part (b). -->
    </answer>
    <answer number="1c">
        <!-- Paste your solution to problem 1, part (c) below this line. --><![CDATA[

SELECT A.i AS i, B.j AS j, SUM(A.val * B.val) AS val 
FROM A, B 
WHERE A.j = B.i 
GROUP BY A.i, B.j;

        ]]><!-- End problem 1, part (c). -->
    </answer>
    <answer number="1d">
        <!-- Paste your solution to problem 1, part (d) below this line. --><![CDATA[

SELECT A1.i AS i, A3.j AS j, SUM(A1.val * A2.val * A3.val) AS val
FROM A A1, A A2, A A3
WHERE A1.j = A2.i
AND A2.j = A3.i
GROUP BY A1.i, A3.j;

        ]]><!-- End problem 1, part (d). -->
    </answer>
    <!-- END PROBLEM 1 -->


    <!-- BEGIN PROBLEM 2 -->
    <answer number="2a">
        <!-- Paste your solution to problem 2, part (a) below this line. --><![CDATA[

SELECT S.store AS Store, SUM(S.WeeklySales) AS AllSales
FROM Sales S JOIN Holidays H
ON S.WeekDate = H.WeekDate
AND H.IsHoliday = 'TRUE'
GROUP BY S.store
ORDER BY AllSales DESC
LIMIT 1;

        ]]><!-- End problem 2, part (a). -->
    </answer>
    <answer number="2b">
        <!-- Paste your solution to problem 2, part (b) below this line. --><![CDATA[

WITH HS(WeekDate, WeeklySales) AS(SELECT S.WeekDate, SUM(S.WeeklySales)
      FROM Sales S, Holidays H
      WHERE S.WeekDate = H.WeekDate 
      AND H.isHoliday = 'TRUE'
      GROUP BY S.WeekDate),
HA(avg) AS(SELECT SUM(WeeklySales) / COUNT(DISTINCT WeekDate) FROM HS),
NHS(WeekDate, WeeklySales) AS(SELECT S.WeekDate, SUM(S.WeeklySales)
      FROM Sales S, Holidays H
      WHERE S.WeekDate = H.WeekDate
      AND H.isHoliday = 'FALSE'
      GROUP BY S.WeekDate)
SELECT COUNT(*) AS NumNonHolidays
FROM NHS, HA
WHERE NHS.WeeklySales > HA.avg;

        ]]><!-- End problem 2, part (b). -->
    </answer>
    <answer number="2c">
        <!-- Paste your solution to problem 2, part (c) below this line. --><![CDATA[

WITH SS AS (SELECT * 
            FROM Sales
            WHERE WeekDate LIKE '%-06-%'
            OR WeekDate LIKE '%-07-%'
            OR WeekDate LIKE '%-08-%')
SELECT S.type AS 'type', SUM(SS.WeeklySales)
FROM Stores S JOIN SS
ON S.store = SS.store
GROUP BY S.type;

        ]]><!-- End problem 2, part (c). -->
    </answer>
    <!-- END PROBLEM 2 -->


    <!-- BEGIN PROBLEM 3 -->
    <answer number="3a">
        <!-- Paste your solution to problem 3, part (a) below this line. --><![CDATA[

SELECT S1.B AS company, S1.d AS distance
FROM streets S1
WHERE S1.A = 'UW-Madison'
AND distance <= 9

UNION

SELECT S2.B AS company, S1.d+S2.d AS distance
FROM streets S1 JOIN streets S2
ON S1.A = 'UW-Madison'
AND S1.B = S2.A
AND S2.B <> S1.A
AND distance <= 9

UNION 

SELECT S3.B AS company, S1.d+S2.d+S3.d AS distance
FROM streets S1 JOIN streets S2 JOIN streets S3
ON S1.A = 'UW-Madison'
AND S1.B = S2.A
AND S2.B <> S1.A
AND S2.B = S3.A
AND S3.B <> S2.A
AND distance <= 9;

        ]]><!-- End problem 3, part (a). -->
    </answer>
    <answer number="3b">
        <!-- Paste your solution to problem 3, part (b) below this line. --><![CDATA[

DROP VIEW IF EXISTS temp;

CREATE VIEW temp(dest, dis) AS
SELECT S1.B ,S1.d
FROM streets S1 
WHERE S1.A = 'UW-Madison' AND S1.d < 15
UNION
SELECT S2.B, S1.d+S2.d
FROM streets S1 JOIN streets S2
ON S1.A = 'UW-Madison' AND S1.B = S2.A AND S2.B<> S1.A AND S1.d+S2.d < 15;

SELECT D1.dest AS company1, D2.dest AS company2, D1.dis+D2.dis AS distance
FROM temp D1, temp D2
WHERE D1.dest > D2.dest
AND distance <= 15;

        ]]><!-- End problem 3, part (b). -->
    </answer>
    <answer number="3c">
        <!-- Paste your solution to problem 3, part (c) below this line. --><![CDATA[

SELECT S1.A AS A, S2.A AS B, S3.A AS C, S1.d+S2.d+S3.d AS distance
FROM streets S1, Streets S2, Streets S3
WHERE S1.B = S2.A AND S2.B = S3.A AND S3.B = S1.A
AND S1.direction = 'F' AND S2.direction = 'F' AND S3.direction = 'F'
LIMIT 1;

        ]]><!-- End problem 3, part (c). -->
    </answer>
    <!-- END PROBLEM 3 -->


</pset>
